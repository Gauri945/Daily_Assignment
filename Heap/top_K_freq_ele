import java.util.*;

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        // Count frequency of each number
        Map<Integer, Integer> map = new HashMap<>();
        for (int n : nums) {
            map.put(n, map.getOrDefault(n, 0) + 1);
        }

        // Min-heap hai isli
        PriorityQueue<Integer> heap = new PriorityQueue<>(
              (a, b) -> map.get(a) - map.get(b)
        );

        
        for (int n : map.keySet()) {
            heap.add(n);
            if (heap.size() > k) heap.poll();
        }

        int[] res = new int[k];
          for (int i = k - 1; i >= 0; i--) {
             res[i] = heap.poll();
        }
        return res;
    }
}
