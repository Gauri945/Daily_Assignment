/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */


 //nth node from end = len-n +1 node frm the start
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n){
     
     ListNode temp = head;
     int len=0;
     while(temp!=null){
        temp=temp.next;
        len++;
     }
     temp=head;
     if(len==n){
    return head.next;
     }

     for(int i=1;i<len-n;i++){
        temp=temp.next;
     } 

     temp.next=temp.next.next;
     return head;  
    

    }
}


//2ND APPROACH
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n){
     
    ListNode slow=head;
    ListNode fast=head;
    
    for(int i=1;i<=n;i++){
      fast=fast.next;
    }

    if(fast==null){
        return head.next;
    }

    while(fast.next!=null){
        slow=slow.next;
        fast=fast.next;
    }
    slow.next=slow.next.next;
    return head;

    }
}